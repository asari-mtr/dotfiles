#TODO macro like feature can execute builtin-command sequentially
#TODO select actions should be separated as independent builtin-commands
#
#diable bind
bind generic m none
bind generic d none
bind generic l none
bind generic t none
bind generic f none
bind generic h none
bind generic p none
bind generic c none
bind generic S none
bind generic H none
bind generic B none

bind generic e none
#bind generic r none
#bind generic R none

bind main C none
bind branch C none
bind status C none

#enable bind
bind generic g move-first-line
bind generic G move-last-line

bind generic p !git pull
bind generic P !git push origin %(branch) #TODO it's not work well. see Top

bind main d view-diff
bind main l view-log
bind main h view-help
#bind main p view-pager
bind main t view-tree
bind main b view-branch
bind main s view-status
bind main S view-stage

#bind main r view-reflog
#bind main r !!git reflog --color
#bind main r !git reset %(commit)
#bind main R !git reset --hard %(commit)
#bind main ^R !git revert %(commit)

bind main C !git cherry-pick %(commit)
#bind main c !ls
#bind main O !fsfa

bind tree b view-blame
bind tree B view-blob
bind tree e edit
bind tree o !tig %(file)

bind branch c !git checkout %(branch) # && reflesh

bind status c !git commit
bind status a !git commit --amend
bind status b view-blame
bind status B view-blob
bind status e edit
bind status o !tig %(file)

bind branch C !git checkout %(branch)
bind branch A !git archive --format=zip %(branch) -o %(branch).zip

bind diff l scroll-right
bind diff h scroll-left
